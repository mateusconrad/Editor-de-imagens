/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interdisciplinar;

import static interdisciplinar.Tela.matrizGlobal;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author cris_
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public static int[][] matrizGlobal = new int[100][100]; // cria matriz global
    BufferedImage imgGLobal;
    BufferedImage b;
    String caminhoGlobal;
    JLabel labelGlobal;
    File fileGLobal;
    JFileChooser chooser = new JFileChooser();

    public Tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpIMAGEM = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        btnCinza = new javax.swing.JButton();
        btnEscuro = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnAmarelo = new javax.swing.JButton();
        btnVermelho = new javax.swing.JButton();
        btnAzul = new javax.swing.JButton();
        btnVerde = new javax.swing.JButton();
        btnBranco = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));

        jpIMAGEM.setMaximumSize(new java.awt.Dimension(1200, 750));

        javax.swing.GroupLayout jpIMAGEMLayout = new javax.swing.GroupLayout(jpIMAGEM);
        jpIMAGEM.setLayout(jpIMAGEMLayout);
        jpIMAGEMLayout.setHorizontalGroup(
            jpIMAGEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        jpIMAGEMLayout.setVerticalGroup(
            jpIMAGEMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );

        jInternalFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setVisible(true);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Filtros:");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Buscar Imagem:");

        jInternalFrame2.setVisible(true);

        btnCinza.setText("Cinza");
        btnCinza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCinzaActionPerformed(evt);
            }
        });

        btnEscuro.setText("Preto");
        btnEscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscuroActionPerformed(evt);
            }
        });

        jButton1.setText("Resetar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnAmarelo.setText("Amarelo");
        btnAmarelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmareloActionPerformed(evt);
            }
        });

        btnVermelho.setText("Vermelho");
        btnVermelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVermelhoActionPerformed(evt);
            }
        });

        btnAzul.setText("Azul");
        btnAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAzulActionPerformed(evt);
            }
        });

        btnVerde.setText("Verde");
        btnVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerdeActionPerformed(evt);
            }
        });

        btnBranco.setText("Branco");
        btnBranco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrancoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBranco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAmarelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCinza, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEscuro, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(btnVermelho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVerde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame2Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEscuro, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(btnCinza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAmarelo, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(btnVermelho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAzul, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(btnVerde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnBranco, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(54, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addComponent(jInternalFrame2)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 222, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addGap(21, 179, Short.MAX_VALUE)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpIMAGEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(jpIMAGEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        //JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG", "jpg");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        fileGLobal = chooser.getSelectedFile();
        caminhoGlobal = chooser.getSelectedFile().getAbsolutePath();
        System.out.println("Caminho da Imagem: " + caminhoGlobal);

        BufferedImage imagem = null;
        InputStream is;

        try {

            is = getClass().getResourceAsStream(caminhoGlobal);

            imagem = ImageIO.read(is);

        } catch (Exception e) {

        }

        if (returnVal == JFileChooser.APPROVE_OPTION) {

            jpIMAGEM.setLayout(new BorderLayout());
            labelGlobal = new JLabel(new ImageIcon(fileGLobal.getAbsolutePath()));
            jpIMAGEM.add(labelGlobal, BorderLayout.CENTER);
            try {

                imgGLobal = ImageIO.read(new File(caminhoGlobal));// cria o arquivo imagem

                for (int l = 0; l < 100; l++) {
                    for (int c = 0; c < 100; c++) {
                        matrizGlobal[l][c] = imgGLobal.getRGB(l, c); // cria a matriz    

                        //System.out.println("MATRIZ: " + matrizGlobal[l][c]);
                    }
                }

            } catch (Exception e) {

                System.out.println("ERRO!!!" + e);

            }

            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            pack();
            setVisible(true);

        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    private void btnCinzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCinzaActionPerformed

        for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0xff;
                int green = (color & 0xff00) >> 8;
                int red = (color & 0xff0000) >> 16;
                int alpha = (color & 0xff000000) >>> 24;

                int cores = (blue + green + red) / 3;

                matrizGlobal[l][c] = (alpha & 0xff) << 24 | (cores & 0xff) << 16 | (cores & 0xff) << 8 | (cores & 0xff);

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);

    }//GEN-LAST:event_btnCinzaActionPerformed

    private void btnEscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscuroActionPerformed

        for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0xff;
                int green = (color & 0xff00) >> 8;
                int red = (color & 0xff0000) >> 16;
                int alpha = (color & 0xff000000) >>> 24;

                int cores = (green + red) / 5;

                matrizGlobal[l][c] = (alpha & 0xff) << 24 | (cores & 0xff) << 16 | (cores & 0xff) << 8 | (cores & 0xff);

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);


    }//GEN-LAST:event_btnEscuroActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        chooser = new JFileChooser();
        String caminho = "";
        File file = null;
        int retorno = chooser.showSaveDialog(null);
        if (retorno == JFileChooser.APPROVE_OPTION) {
            caminho = chooser.getSelectedFile().getAbsolutePath();
        }
        if (!caminho.equals("")) {
            try {
                ImageIO.write((RenderedImage) b, "jpg", new File(caminho + ".jpg"));
            } catch (IOException ex) {
                System.out.println("ERRO AO SALVAR!!!" + ex);
            }

            System.out.println("SALVO COM SUCESSO!!!");
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //jpIMAGEM.remove(labelGlobal);
        //jpIMAGEM.validate();
        jpIMAGEM.removeAll();
        jpIMAGEM.repaint();

        jpIMAGEM.add(labelGlobal, BorderLayout.CENTER);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAmareloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmareloActionPerformed
        for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0xFFFFF0;
                int green = (color & 0xFFFFF0) >> 8;
                int red = (color & 0xFFFFF0) >> 16;
                int alpha = (color & 0xFFFFF0) >>> 24;

                int cores = (green + red) / 2;

                matrizGlobal[l][c] = (alpha & 0xFFFF00) << 24 | (cores & 0xFFFF00) << 16 | (cores & 0xFFFF00) << 8 | (cores & 0xFFFF00);

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);


    }//GEN-LAST:event_btnAmareloActionPerformed

    private void btnVermelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVermelhoActionPerformed

        for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0xffff0000;
                int green = (color & 0xffff0000) >> 8;
                int red = (color & 0xffff0000) >> 16;
                int alpha = (color & 0xffff0000) >>> 24;

                int cores = (blue + green) / 2;

                matrizGlobal[l][c] = (alpha & 0xffff0000) << 24 | (cores & 0xffff0000) << 16 | (cores & 0xffff0000) << 8 | (cores & 0xffff0000);

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);

    }//GEN-LAST:event_btnVermelhoActionPerformed

    private void btnAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzulActionPerformed

        for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0xFFFF00;
                int green = (color & 0xFFFF00) >> 8;
                int red = (color & 0xFFFF00) >> 16;
                int alpha = (color & 0xFFFF00) >>> 24;
                
              

                int cores = (green+green)/2;

                matrizGlobal[l][c] =  (color & 0x00FF00) >> 8;

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);

    }//GEN-LAST:event_btnAzulActionPerformed

    private void btnBrancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrancoActionPerformed
        for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0x0000FF;
                int green = (color & 0x0000FF) >> 8;
                int red = (color & 0x0000FF) >> 16;
                int alpha = (color & 0x0000FF) >>> 24;

                int cores = (blue + 0xFFFF00) / 2;

                matrizGlobal[l][c] = (alpha & 0x0000FF) << 24 | (cores & 0x0000FF) << 16 | (cores & 0x0000FF) << 8 | (cores & 0x0000FF);

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);
    }//GEN-LAST:event_btnBrancoActionPerformed

    private void btnVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerdeActionPerformed
          for (int l = 0; l < 100; l++) {
            for (int c = 0; c < 100; c++) {

                int color = imgGLobal.getRGB(l, c);

                int blue = color & 0xFFFFFF;
                int green = (color & 0xFFFFFF) >> 8;
                int red = (color & 0xFFFFFF) >> 16;
                int alpha = (color & 0xFFFFFF) >>> 24;
                
              

                int cores = (green+green) / 2;

                matrizGlobal[l][c] =  (color & 0xFFFFF0) >> 8;

            }
        }

        b = new BufferedImage(matrizGlobal.length, matrizGlobal[0].length,
                BufferedImage.TYPE_INT_RGB);

// Atribui para cada pixel do BufferedImage uma cor de uma posição da matriz.
        for (int x = 0; x < matrizGlobal.length; x++) {
            for (int y = 0; y < matrizGlobal[x].length; y++) {
                b.setRGB(x, y, new Color(matrizGlobal[x][y]).getRGB());
            }
        }

        jpIMAGEM.remove(labelGlobal);
        jpIMAGEM.validate();

        JLabel l = new JLabel();
        l.setIcon(new ImageIcon(b));
        jpIMAGEM.add(l);

    }//GEN-LAST:event_btnVerdeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmarelo;
    private javax.swing.JButton btnAzul;
    private javax.swing.JButton btnBranco;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCinza;
    private javax.swing.JButton btnEscuro;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVerde;
    private javax.swing.JButton btnVermelho;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jpIMAGEM;
    // End of variables declaration//GEN-END:variables

}
